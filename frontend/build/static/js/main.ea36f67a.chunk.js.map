{"version":3,"sources":["components/GraphPane/GraphPane.js","feathers.js","components/Navigation/AccountModal.js","components/EditRelationModal/SelectRelationType.js","components/RelationsPane/LinkifyBibliography.js","components/EditRelationModal/StageWork/utilities/crossRefApi.js","components/EditRelationModal/StageWork/utilities/citations.js","components/EditRelationModal/StageWork/utilities/chicagoAuthorDate.js","components/EditRelationModal/StageWork/MetadataSearch.js","components/EditRelationModal/StageWork/AddSearchPane.js","components/EditRelationModal/StageWork/StageWork.js","components/EditRelationModal/StagingSummaryCard.js","components/EditRelationModal/EditRelationModal.js","components/Navigation/PaginatedResults.js","components/Navigation/ContributionsModal.js","components/Navigation/GlossaryModal.js","components/Navigation/LoginModal.js","components/Navigation/NavSearch.js","components/Navigation/UsersModal.js","components/Navigation/Navigation.js","components/RelationsPane/CurrentWorkCard.js","components/RelationsPane/RelationCard.js","components/RelationsPane/RelationsPane.js","components/ErrorPane/ErrorPane.js","components/App.js","serviceWorker.js","index.js"],"names":["GraphPane","drawGraph","props","currentWork","selectWork","id","graphTransition","d3","duration","ease","graphviz","zoom","transition","renderDot","digraph","on","attr","node","key","keyCode","this","Component","client","feathers","configure","rest","fetch","window","authentication","storage","localStorage","AccountModal","patchUser","login","stagedUserPatch","targetUser","toggleAccountModal","setState","isSubmitting","service","patch","then","deleteUser","remove","handleChange","event","setStagedUserPatch","value","target","trim","attribute","newValue","isEmailValid","EmailValidator","email","isReadyToSubmit","currentUser","patchIsIdenticalToCurrentUser","displayName","state","showAccountModal","relataConfig","oauthProvidersUsed","oauthProviders","filter","provider","map","name","join","oauthSummary","length","submitDisabled","Modal","show","onHide","size","Header","closeButton","Title","Body","htmlFor","InputGroup","className","FormControl","aria-describedby","defaultValue","placeholder","maxLength","onChange","isInvalid","Footer","Button","variant","onClick","disabled","style","cursor","SelectRelationType","handleClick","type","setStagedRelation","stagedRelation","handleAnnotationBlur","setStagedAnnotation","replace","stagedAnnotation","buttonTitle","dropdownItems","types","Object","keys","relationType","sort","index","color","borderLeft","Dropdown","Item","Card","Row","Col","sm","Form","Label","DropdownButton","title","Group","controlId","Control","as","rows","minHeight","onBlur","componentDecorator","href","text","rel","stopPropagation","wordBreak","msWordBreak","LinkifyBibliography","children","filterCrossRefWorkByType","work","includes","fixCrossRefWork","queryCrossRefApi","query","a","url","URL","searchParams","set","response","json","responseJson","items","message","Cite","CSL","register","addTemplate","makeCitations","cite","data","citation","trimParentheses","format","template","bibliography","error","MetadataSearch","highlightOnlyResult","isLoading","options","_renderMenuItemChildren","option","filterBy","defaultFilterBy","compareTwoStrings","onSearch","find","searchQuery","relataResults","crossRefResults","crossRefWorks","result","b","selectedItems","setTargetWork","delay","labelKey","renderMenuItemChildren","maxHeight","selectHintOnEnter","clearButton","AddSearchPane","stagedWorkType","targetWork","targetBibliography","Text","identifier","StageWork","stageWork","unstageWork","stagedWork","heading","OverlayTrigger","overlay","Tooltip","onKeyPress","tabIndex","Tab","Container","defaultActiveKey","Content","Pane","eventKey","StagingSummaryCard","swapStagedWorks","workFrom","newWorks","workTo","workFromSummary","workToSummary","typeValue","relationConfig","relationPreposition","preposition","relationSummary","indefinite","annotationAuthor","annotationFooter","border","EditRelationModal","deleteRelation","toggleEditRelationModal","relationsService","submitRelation","worksService","create","workFromResult","workToResult","console","log","relationToSubmit","workFromId","workToId","annotation","userId","updateExistingRelation","update","showEditRelationModal","modalTitle","editingExistingAlert","Alert","Link","PaginatedResults","fetchResults","noResultsMessage","transformResult","results","limit","skip","total","isFirstPage","isLastPage","prevPageIndex","lastPageIndex","Math","floor","nextPageIndex","itemRangeStart","itemRangeEnd","resultRows","ListGroup","overflow","Pagination","First","Prev","Next","Last","ContributionsModal","toggleEditExistingRelationModal","relation","toggleContributionsModal","workFromWithCitations","workToWithCitations","makeContributionRow","getRelationColor","updatedDate","parseISO","updatedAt","updatedSummary","createdAt","formatDistanceToNow","addSuffix","updatedTitle","action","getUserRelations","showContributionsModal","userRelations","GlossaryModal","showGlossaryModal","toggleGlossaryModal","definitions","definition","LoginModal","showLoginModal","toggleLoginModal","loginButtons","iconClass","icon","block","NavSearch","Boolean","typeahead","clear","ref","UsersModal","getUsers","makeUserRow","user","adminSummary","isAdmin","userSummary","currentUserNote","deleteButton","showUsersModal","toggleUsersModal","users","Navigation","$limit","$skip","$sort","expand","setStagedUserId","stagedUserId","logout","aboutUrl","userLinks","Nav","glossaryModal","accountModal","contributionsModal","loginModal","usersModal","Navbar","bg","fluid","position","Brand","Toggle","aria-controls","Collapse","CurrentWorkCard","RelationCard","relationLead","definitionTooltip","placement","editButton","borderLeftColor","RelationsPane","toggleAddRelationModal","RelationCards","relationsTo","addRelationButton","ErrorPane","code","Heading","App","setInitialState","selector","get","toString","graph","currentWorkNotFound","refresh","reAuthenticate","catch","getRelataConfig","callback","changeHistory","newSelector","doi","match","params","history","push","relationsFrom","listen","location","undefined","candidates","landingWorks","random","top","md","withRouter","hostname","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea36f67a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport * as d3 from \"d3\";\nimport \"d3-graphviz\";\n\nclass GraphPane extends Component {\n  drawGraph = () => {\n    const { currentWork, selectWork } = this.props;\n\n    if (currentWork !== null && \"id\" in currentWork && currentWork.id !== null) {\n      // Draw graph\n      const graphTransition = d3\n        .transition()\n        .duration(360)\n        .ease(d3.easeQuad);\n      d3.select(\"#graph\")\n        .graphviz({ zoom: false })\n        .transition(graphTransition)\n        .renderDot(currentWork.digraph)\n        .on(\"end\", () => {\n          d3.selectAll(\".relation-node\")\n            .attr(\"tabindex\", \"0\")\n            .on(\"click\", node => {\n              selectWork(node.key);\n            })\n            .on(\"keypress\", (node) => {\n              if (d3.event.keyCode === 13) {\n                selectWork(node.key);\n              }\n            });\n          d3.selectAll(\".current-work-node\").on(\"click\", null);\n        });\n    }\n  };\n\n  componentDidUpdate() {\n    this.drawGraph();\n  }\n\n  render() {\n    return <div id=\"graph\"></div>;\n  }\n}\n\nexport default GraphPane;\n","import feathers from \"@feathersjs/client\";\n\n// Initialize Feathers REST client\nconst client = feathers();\nclient\n  .configure(feathers.rest().fetch(window.fetch))\n  .configure(feathers.authentication({ storage: window.localStorage }));\n\nexport { client };\n","import React, { Component } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport * as EmailValidator from \"email-validator\";\n\nimport { client } from \"../../feathers\";\n\nclass AccountModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmitting: false\n    };\n  }\n\n  patchUser = () => {\n    const {\n      login,\n      selectWork,\n      stagedUserPatch,\n      targetUser,\n      toggleAccountModal\n    } = this.props;\n\n    this.setState({ isSubmitting: true });\n    const usersService = client.service(\"users\");\n    usersService.patch(targetUser.id, stagedUserPatch).then(() => {\n      // Refresh login to update currentUser with updated displayName/email\n      login(true);\n      selectWork();\n      toggleAccountModal();\n      this.setState({ isSubmitting: false });\n    });\n  };\n\n  deleteUser = () => {\n    const { targetUser, toggleAccountModal } = this.props;\n\n    this.setState({ isSubmitting: true });\n    const usersService = client.service(\"users\");\n    usersService.remove(targetUser.id).then(() => {\n      toggleAccountModal();\n      this.setState({ isSubmitting: false });\n    });\n  };\n\n  handleChange = event => {\n    const { setStagedUserPatch, stagedUserPatch } = this.props;\n    const targetMappings = {\n      \"account-display-name-input\": \"displayName\",\n      \"account-email-input\": \"email\"\n    };\n    const value = event.target.value.trim();\n    const attribute = targetMappings[event.target.id];\n    const newValue = value ? value : null;\n    const patch = {\n      ...stagedUserPatch,\n      [attribute]: newValue\n    };\n    setStagedUserPatch(patch);\n  };\n\n  isEmailValid = () => {\n    const { stagedUserPatch } = this.props;\n    return (\n      EmailValidator.validate(stagedUserPatch.email) || !stagedUserPatch.email\n    );\n  };\n\n  // Enable submission only when fields are populated and valid\n  isReadyToSubmit = () => {\n    const { currentUser, stagedUserPatch } = this.props;\n\n    const patchIsIdenticalToCurrentUser =\n      currentUser.displayName === stagedUserPatch.displayName &&\n      currentUser.email === stagedUserPatch.email;\n\n    return (\n      stagedUserPatch.displayName &&\n      this.isEmailValid() &&\n      !patchIsIdenticalToCurrentUser\n    );\n  };\n\n  render() {\n    const {\n      showAccountModal,\n      relataConfig,\n      stagedUserPatch,\n      targetUser,\n      toggleAccountModal\n    } = this.props;\n    const { isSubmitting } = this.state;\n\n    // Summarize which OAuth providers are used for authentication. In almost\n    // all cases this will be a single provider, but it's theoretically\n    // possible that, e.g., an administrator might add multiple OAuth provider\n    // IDs to a user record manually via the database and so allow multiple\n    // providers for a single user\n    const oauthProvidersUsed = relataConfig.oauthProviders\n      ? relataConfig.oauthProviders\n          .filter(provider => {\n            return targetUser[`${provider.id}Id`] !== null;\n          })\n          .map(provider => provider.name)\n          .join(\" and \")\n      : [];\n    const oauthSummary =\n      oauthProvidersUsed.length > 0 ? (\n        <p>This account authenticates via {oauthProvidersUsed}.</p>\n      ) : null;\n\n    // Disable submit button based on whether all required values are set\n    const submitDisabled = !this.isReadyToSubmit();\n\n    return (\n      <Modal show={showAccountModal} onHide={toggleAccountModal} size=\"md\">\n        <Modal.Header closeButton>\n          <Modal.Title>Account</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {oauthSummary}\n          <label\n            id=\"account-display-name-input-label\"\n            htmlFor=\"account-display-name-input\"\n          >\n            Display Name\n          </label>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              id=\"account-display-name-input\"\n              aria-describedby=\"account-display-name-input-label\"\n              defaultValue={stagedUserPatch.displayName}\n              placeholder=\"Name to display on annotations\"\n              maxLength={100}\n              onChange={this.handleChange}\n            />\n          </InputGroup>\n          <label id=\"account-email-input-label\" htmlFor=\"account-email-input\">\n            Email <i>(optional)</i>\n          </label>\n          <InputGroup className=\"mb-3\">\n            <FormControl\n              id=\"account-email-input\"\n              aria-describedby=\"account-email-input-label\"\n              isInvalid={!this.isEmailValid()}\n              defaultValue={stagedUserPatch.email}\n              placeholder=\"Enter a valid email, e.g., first.last@domain.edu\"\n              maxLength={100}\n              onChange={this.handleChange}\n            />\n          </InputGroup>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={toggleAccountModal}>\n            Cancel\n          </Button>\n          <Button\n            disabled={submitDisabled || isSubmitting}\n            style={\n              submitDisabled || isSubmitting ? { cursor: \"not-allowed\" } : {}\n            }\n            variant=\"primary\"\n            onClick={this.patchUser}\n          >\n            {isSubmitting ? \"Submitting…\" : \"Submit\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n\nclass SelectRelationType extends Component {\n  handleClick = type => {\n    const { setStagedRelation, stagedRelation } = this.props;\n    setStagedRelation({ ...stagedRelation, type: type });\n  };\n\n  handleAnnotationBlur = event => {\n    const { setStagedAnnotation } = this.props;\n    const annotation = event.target.value.replace(/\\s+/g, \" \").trim();\n    setStagedAnnotation(annotation);\n  };\n\n  render() {\n    const { relataConfig, stagedAnnotation, stagedRelation } = this.props;\n\n    const buttonTitle = stagedRelation.type || \"Relation Type\";\n\n    // Insert relation types as items in dropdown, excluding the catch-all *\n    let relationTypes;\n    if (relataConfig.types) {\n      relationTypes = Object.keys(relataConfig.types)\n        .filter(relationType => relationType !== \"*\")\n        .sort();\n    } else {\n      relationTypes = [];\n    }\n    const dropdownItems = relationTypes.map((relationType, index) => {\n      const color = relataConfig.types[relationType].color;\n      const style = { borderLeft: `0.25rem solid ${color}` };\n      return (\n        <Dropdown.Item\n          key={index}\n          style={style}\n          onClick={() => this.handleClick(relationType)}\n        >\n          {relationType}\n        </Dropdown.Item>\n      );\n    });\n\n    return (\n      <Card className=\"mt-3\">\n        <Card.Body>\n          <Row>\n            <Col sm={3}>\n              <Form.Label htmlFor=\"relation-type-dropdown\">\n                Relation Type\n              </Form.Label>\n              <DropdownButton\n                id=\"relation-type-dropdown\"\n                variant=\"outline-primary\"\n                title={buttonTitle}\n              >\n                {dropdownItems}\n              </DropdownButton>\n            </Col>\n            <Col sm={9}>\n              <Form.Group controlId=\"annotation-textarea\">\n                <Form.Label>\n                  Annotation <i>(optional)</i>\n                </Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  defaultValue={stagedAnnotation}\n                  rows=\"1\"\n                  style={{ minHeight: \"2.4rem\" }}\n                  maxLength={500}\n                  onBlur={this.handleAnnotationBlur}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SelectRelationType;\n","import React from \"react\";\nimport Linkify from \"react-linkify\";\n\n// Workaround to enable Linkify to target _new within React-Bootstrap\n// components\nconst componentDecorator = (href, text, key) => (\n  <a\n    href={href}\n    key={key}\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n    onClick={event => event.stopPropagation()}\n    style={{ wordBreak: \"break-all\", msWordBreak: \"break-all\" }}\n  >\n    {text}\n  </a>\n);\n\nconst LinkifyBibliography = props => {\n  return (\n    <Linkify componentDecorator={componentDecorator}>{props.children}</Linkify>\n  );\n};\n\nexport default LinkifyBibliography;\n","// Filter out any CrossRef works outside a range of standard bibliographic\n// types; this cuts down on some potentially irrelevant results and is much\n// more performant than the CrossRef API's (rather slow) filter param\nconst filterCrossRefWorkByType = (work, index) => {\n  const validTypes = [\n    \"article-journal\",\n    \"book\",\n    \"chapter\",\n    \"manuscript\",\n    \"paper-conference\",\n    \"report\"\n  ];\n  return validTypes.includes(work.type);\n};\n\n// Transform invalid CSL JSON types from CrossRef API to make them compliant;\n// because CrossRef API won't serve requests on works endpoint when we specify\n// a content type of CSL JSON, we have to fix work types ourselves as\n// described here: https://github.com/CrossRef/rest-api-doc/issues/222\nconst fixCrossRefWork = work => {\n  const typeMappings = {\n    \"journal-article\": \"article-journal\",\n    \"book-chapter\": \"chapter\",\n    \"posted-content\": \"manuscript\",\n    \"proceedings-article\": \"paper-conference\"\n  };\n  work.type = typeMappings[work.type] || work.type;\n\n  // If there happens to be an id field, remove it\n  delete work.id;\n\n  return work;\n};\n\nconst queryCrossRefApi = async query => {\n  // Construct URL\n  const url = new URL(\"https://api.crossref.org/works\");\n  url.searchParams.set(\"rows\", 20);\n  url.searchParams.set(\"query.bibliographic\", query);\n\n  // The CrossRef API documentation advises to specify this content type in\n  // our headers, but throws a 406 response if it's used; leaving it commented\n  // out for now\n  // const headers = {\n  //   Accept: \"application/vnd.citationstyles.csl+json\"\n  // };\n\n  const response = await fetch(url.href);\n  const responseJson = await response.json();\n  const items = responseJson.message.items;\n\n  return items;\n};\n\nexport { filterCrossRefWorkByType, fixCrossRefWork, queryCrossRefApi };\n","import Cite from \"citation-js\";\n\nimport chicagoAuthorDate from \"./chicagoAuthorDate\";\n\n// Chicago 17th ed. author-date CSL template, sourced from\n// https://github.com/citation-style-language. See https://citationstyles.org\nconst templateName = \"chicago-author-date\";\nconst template = chicagoAuthorDate;\nCite.CSL.register.addTemplate(templateName, template);\n\nconst trimParentheses = citation => citation.replace(/^\\(|\\)$/g, \"\");\n\nconst makeCitations = work => {\n  try {\n    const cite = new Cite(work.data);\n    const citation = trimParentheses(\n      cite.format(\"citation\", { template: templateName })\n    );\n    const bibliography = cite\n      .format(\"bibliography\", { template: templateName })\n      .trim();\n    return { citation, bibliography };\n  } catch (error) {\n    return { citation: \"Error\", bibliography: \"Error\" };\n  }\n};\n\nexport { makeCitations };\n","// Chicago 17th ed. author-date CSL template, sourced from\n// https://github.com/citation-style-language. See https://citationstyles.org\nconst chicagoAuthorDate = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<style xmlns=\"http://purl.org/net/xbiblio/csl\" class=\"in-text\" version=\"1.0\" demote-non-dropping-particle=\"display-and-sort\" page-range-format=\"chicago\">\n  <info>\n    <title>Chicago Manual of Style 17th edition (author-date)</title>\n    <id>http://www.zotero.org/styles/chicago-author-date</id>\n    <link href=\"http://www.zotero.org/styles/chicago-author-date\" rel=\"self\"/>\n    <link href=\"http://www.chicagomanualofstyle.org/tools_citationguide.html\" rel=\"documentation\"/>\n    <author>\n      <name>Julian Onions</name>\n      <email>julian.onions@gmail.com</email>\n    </author>\n    <contributor>\n      <name>Sebastian Karcher</name>\n    </contributor>\n    <contributor>\n      <name>Richard Karnesky</name>\n      <email>karnesky+zotero@gmail.com</email>\n      <uri>http://arc.nucapt.northwestern.edu/Richard_Karnesky</uri>\n    </contributor>\n    <contributor>\n      <name>Andrew Dunning</name>\n      <email>andrew.dunning@utoronto.ca</email>\n      <uri>https://orcid.org/0000-0003-0464-5036</uri>\n    </contributor>\n    <contributor>\n      <name>Matthew Roth</name>\n      <email>matthew.g.roth@yale.edu</email>\n      <uri> https://orcid.org/0000-0001-7902-6331</uri>\n    </contributor>\n    <category citation-format=\"author-date\"/>\n    <category field=\"generic-base\"/>\n    <summary>The author-date variant of the Chicago style</summary>\n    <updated>2018-01-24T12:00:00+00:00</updated>\n    <rights license=\"http://creativecommons.org/licenses/by-sa/3.0/\">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights>\n  </info>\n  <locale xml:lang=\"en\">\n    <terms>\n      <term name=\"editor\" form=\"verb-short\">ed.</term>\n      <term name=\"container-author\" form=\"verb\">by</term>\n      <term name=\"translator\" form=\"verb-short\">trans.</term>\n      <term name=\"editortranslator\" form=\"verb\">edited and translated by</term>\n      <term name=\"translator\" form=\"short\">trans.</term>\n    </terms>\n  </locale>\n  <macro name=\"secondary-contributors\">\n    <choose>\n      <if type=\"chapter entry-dictionary entry-encyclopedia paper-conference\" match=\"none\">\n        <group delimiter=\". \">\n          <names variable=\"editor translator\" delimiter=\". \">\n            <label form=\"verb\" text-case=\"capitalize-first\" suffix=\" \"/>\n            <name and=\"text\" delimiter=\", \"/>\n          </names>\n          <names variable=\"director\" delimiter=\". \">\n            <label form=\"verb\" text-case=\"capitalize-first\" suffix=\" \"/>\n            <name and=\"text\" delimiter=\", \"/>\n          </names>\n        </group>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"container-contributors\">\n    <choose>\n      <if type=\"chapter entry-dictionary entry-encyclopedia paper-conference\" match=\"any\">\n        <group prefix=\", \" delimiter=\", \">\n          <names variable=\"container-author\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \"/>\n            <name and=\"text\" delimiter=\", \"/>\n          </names>\n          <names variable=\"editor translator\" delimiter=\", \">\n            <label form=\"verb\" suffix=\" \"/>\n            <name and=\"text\" delimiter=\", \"/>\n          </names>\n        </group>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"editor\">\n    <names variable=\"editor\">\n      <name name-as-sort-order=\"first\" and=\"text\" sort-separator=\", \" delimiter=\", \" delimiter-precedes-last=\"always\"/>\n      <label form=\"short\" prefix=\", \"/>\n    </names>\n  </macro>\n  <macro name=\"translator\">\n    <names variable=\"translator\">\n      <name name-as-sort-order=\"first\" and=\"text\" sort-separator=\", \" delimiter=\", \" delimiter-precedes-last=\"always\"/>\n      <label form=\"short\" prefix=\", \"/>\n    </names>\n  </macro>\n  <macro name=\"recipient\">\n    <choose>\n      <if type=\"personal_communication\">\n        <choose>\n          <if variable=\"genre\">\n            <text variable=\"genre\" text-case=\"capitalize-first\"/>\n          </if>\n          <else>\n            <text term=\"letter\" text-case=\"capitalize-first\"/>\n          </else>\n        </choose>\n      </if>\n    </choose>\n    <names variable=\"recipient\" delimiter=\", \">\n      <label form=\"verb\" prefix=\" \" text-case=\"lowercase\" suffix=\" \"/>\n      <name and=\"text\" delimiter=\", \"/>\n    </names>\n  </macro>\n  <macro name=\"substitute-title\">\n    <choose>\n      <if type=\"article-magazine article-newspaper review review-book\" match=\"any\">\n        <text macro=\"container-title\"/>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"contributors\">\n    <group delimiter=\". \">\n      <names variable=\"author\">\n        <name and=\"text\" name-as-sort-order=\"first\" sort-separator=\", \" delimiter=\", \" delimiter-precedes-last=\"always\"/>\n        <label form=\"short\" prefix=\", \"/>\n        <substitute>\n          <names variable=\"editor\"/>\n          <names variable=\"translator\"/>\n          <names variable=\"director\"/>\n          <text macro=\"substitute-title\"/>\n          <text macro=\"title\"/>\n        </substitute>\n      </names>\n      <text macro=\"recipient\"/>\n    </group>\n  </macro>\n  <macro name=\"contributors-short\">\n    <names variable=\"author\">\n      <name form=\"short\" and=\"text\" delimiter=\", \" initialize-with=\". \"/>\n      <substitute>\n        <names variable=\"editor\"/>\n        <names variable=\"translator\"/>\n        <names variable=\"director\"/>\n        <text macro=\"substitute-title\"/>\n        <text macro=\"title\"/>\n      </substitute>\n    </names>\n  </macro>\n  <macro name=\"interviewer\">\n    <names variable=\"interviewer\" delimiter=\", \">\n      <label form=\"verb\" prefix=\" \" text-case=\"capitalize-first\" suffix=\" \"/>\n      <name and=\"text\" delimiter=\", \"/>\n    </names>\n  </macro>\n  <macro name=\"archive\">\n    <group delimiter=\". \">\n      <text variable=\"archive_location\" text-case=\"capitalize-first\"/>\n      <text variable=\"archive\"/>\n      <text variable=\"archive-place\"/>\n    </group>\n  </macro>\n  <macro name=\"access\">\n    <group delimiter=\". \">\n      <choose>\n        <if type=\"graphic report\" match=\"any\">\n          <text macro=\"archive\"/>\n        </if>\n        <else-if type=\"article-journal bill book chapter legal_case legislation motion_picture paper-conference\" match=\"none\">\n          <text macro=\"archive\"/>\n        </else-if>\n      </choose>\n      <choose>\n        <if type=\"webpage post-weblog\" match=\"any\">\n          <date variable=\"issued\" form=\"text\"/>\n        </if>\n      </choose>\n      <choose>\n        <if variable=\"issued\" match=\"none\">\n          <group delimiter=\" \">\n            <text term=\"accessed\" text-case=\"capitalize-first\"/>\n            <date variable=\"accessed\" form=\"text\"/>\n          </group>\n        </if>\n      </choose>\n      <choose>\n        <if type=\"legal_case\" match=\"none\">\n          <choose>\n            <if variable=\"DOI\">\n              <text variable=\"DOI\" prefix=\"https://doi.org/\"/>\n            </if>\n            <else>\n              <text variable=\"URL\"/>\n            </else>\n          </choose>\n        </if>\n      </choose>\n    </group>\n  </macro>\n  <macro name=\"title\">\n    <choose>\n      <if variable=\"title\" match=\"none\">\n        <choose>\n          <if type=\"personal_communication\" match=\"none\">\n            <text variable=\"genre\" text-case=\"capitalize-first\"/>\n          </if>\n        </choose>\n      </if>\n      <else-if type=\"bill book graphic legislation motion_picture song\" match=\"any\">\n        <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>\n        <group prefix=\" (\" suffix=\")\" delimiter=\" \">\n          <text term=\"version\"/>\n          <text variable=\"version\"/>\n        </group>\n      </else-if>\n      <else-if variable=\"reviewed-author\">\n        <choose>\n          <if variable=\"reviewed-title\">\n            <group delimiter=\". \">\n              <text variable=\"title\" text-case=\"title\" quotes=\"true\"/>\n              <group delimiter=\", \">\n                <text variable=\"reviewed-title\" text-case=\"title\" font-style=\"italic\" prefix=\"Review of \"/>\n                <names variable=\"reviewed-author\">\n                  <label form=\"verb-short\" text-case=\"lowercase\" suffix=\" \"/>\n                  <name and=\"text\" delimiter=\", \"/>\n                </names>\n              </group>\n            </group>\n          </if>\n          <else>\n            <group delimiter=\", \">\n              <text variable=\"title\" text-case=\"title\" font-style=\"italic\" prefix=\"Review of \"/>\n              <names variable=\"reviewed-author\">\n                <label form=\"verb-short\" text-case=\"lowercase\" suffix=\" \"/>\n                <name and=\"text\" delimiter=\", \"/>\n              </names>\n            </group>\n          </else>\n        </choose>\n      </else-if>\n      <else-if type=\"legal_case interview patent\" match=\"any\">\n        <text variable=\"title\"/>\n      </else-if>\n      <else>\n        <text variable=\"title\" text-case=\"title\" quotes=\"true\"/>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"edition\">\n    <choose>\n      <if type=\"bill book graphic legal_case legislation motion_picture report song\" match=\"any\">\n        <choose>\n          <if is-numeric=\"edition\">\n            <group delimiter=\" \" prefix=\". \">\n              <number variable=\"edition\" form=\"ordinal\"/>\n              <text term=\"edition\" form=\"short\" strip-periods=\"true\"/>\n            </group>\n          </if>\n          <else>\n            <text variable=\"edition\" text-case=\"capitalize-first\" prefix=\". \"/>\n          </else>\n        </choose>\n      </if>\n      <else-if type=\"chapter entry-dictionary entry-encyclopedia paper-conference\" match=\"any\">\n        <choose>\n          <if is-numeric=\"edition\">\n            <group delimiter=\" \" prefix=\", \">\n              <number variable=\"edition\" form=\"ordinal\"/>\n              <text term=\"edition\" form=\"short\"/>\n            </group>\n          </if>\n          <else>\n            <text variable=\"edition\" prefix=\", \"/>\n          </else>\n        </choose>\n      </else-if>\n    </choose>\n  </macro>\n  <macro name=\"locators\">\n    <choose>\n      <if type=\"article-journal\">\n        <choose>\n          <if variable=\"volume\">\n            <text variable=\"volume\" prefix=\" \"/>\n            <group prefix=\" (\" suffix=\")\">\n              <choose>\n                <if variable=\"issue\">\n                  <text variable=\"issue\"/>\n                </if>\n                <else>\n                  <date variable=\"issued\">\n                    <date-part name=\"month\"/>\n                  </date>\n                </else>\n              </choose>\n            </group>\n          </if>\n          <else-if variable=\"issue\">\n            <group delimiter=\" \" prefix=\", \">\n              <text term=\"issue\" form=\"short\"/>\n              <text variable=\"issue\"/>\n              <date variable=\"issued\" prefix=\"(\" suffix=\")\">\n                <date-part name=\"month\"/>\n              </date>\n            </group>\n          </else-if>\n          <else>\n            <date variable=\"issued\" prefix=\", \">\n              <date-part name=\"month\"/>\n            </date>\n          </else>\n        </choose>\n      </if>\n      <else-if type=\"legal_case\">\n        <text variable=\"volume\" prefix=\", \"/>\n        <text variable=\"container-title\" prefix=\" \"/>\n        <text variable=\"page\" prefix=\" \"/>\n      </else-if>\n      <else-if type=\"bill book graphic legal_case legislation motion_picture report song\" match=\"any\">\n        <group prefix=\". \" delimiter=\". \">\n          <group>\n            <text term=\"volume\" form=\"short\" text-case=\"capitalize-first\" suffix=\" \"/>\n            <number variable=\"volume\" form=\"numeric\"/>\n          </group>\n          <group>\n            <number variable=\"number-of-volumes\" form=\"numeric\"/>\n            <text term=\"volume\" form=\"short\" prefix=\" \" plural=\"true\"/>\n          </group>\n        </group>\n      </else-if>\n      <else-if type=\"chapter entry-dictionary entry-encyclopedia paper-conference\" match=\"any\">\n        <choose>\n          <if variable=\"page\" match=\"none\">\n            <group prefix=\". \">\n              <text term=\"volume\" form=\"short\" text-case=\"capitalize-first\" suffix=\" \"/>\n              <number variable=\"volume\" form=\"numeric\"/>\n            </group>\n          </if>\n        </choose>\n      </else-if>\n    </choose>\n  </macro>\n  <macro name=\"locators-chapter\">\n    <choose>\n      <if type=\"chapter entry-dictionary entry-encyclopedia paper-conference\" match=\"any\">\n        <choose>\n          <if variable=\"page\">\n            <group prefix=\", \">\n              <text variable=\"volume\" suffix=\":\"/>\n              <text variable=\"page\"/>\n            </group>\n          </if>\n        </choose>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"locators-article\">\n    <choose>\n      <if type=\"article-newspaper\">\n        <group prefix=\", \" delimiter=\", \">\n          <group delimiter=\" \">\n            <text variable=\"edition\"/>\n            <text term=\"edition\"/>\n          </group>\n          <group>\n            <text term=\"section\" form=\"short\" suffix=\" \"/>\n            <text variable=\"section\"/>\n          </group>\n        </group>\n      </if>\n      <else-if type=\"article-journal\">\n        <choose>\n          <if variable=\"volume issue\" match=\"any\">\n            <text variable=\"page\" prefix=\": \"/>\n          </if>\n          <else>\n            <text variable=\"page\" prefix=\", \"/>\n          </else>\n        </choose>\n      </else-if>\n    </choose>\n  </macro>\n  <macro name=\"point-locators\">\n    <choose>\n      <if variable=\"locator\">\n        <choose>\n          <if locator=\"page\" match=\"none\">\n            <choose>\n              <if type=\"bill book graphic legal_case legislation motion_picture report song\" match=\"any\">\n                <choose>\n                  <if variable=\"volume\">\n                    <group>\n                      <text term=\"volume\" form=\"short\" suffix=\" \"/>\n                      <number variable=\"volume\" form=\"numeric\"/>\n                      <label variable=\"locator\" form=\"short\" prefix=\", \" suffix=\" \"/>\n                    </group>\n                  </if>\n                  <else>\n                    <label variable=\"locator\" form=\"short\" suffix=\" \"/>\n                  </else>\n                </choose>\n              </if>\n              <else>\n                <label variable=\"locator\" form=\"short\" suffix=\" \"/>\n              </else>\n            </choose>\n          </if>\n          <else-if type=\"bill book graphic legal_case legislation motion_picture report song\" match=\"any\">\n            <number variable=\"volume\" form=\"numeric\" suffix=\":\"/>\n          </else-if>\n        </choose>\n        <text variable=\"locator\"/>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"container-prefix\">\n    <text term=\"in\" text-case=\"capitalize-first\"/>\n  </macro>\n  <macro name=\"container-title\">\n    <choose>\n      <if type=\"chapter entry-dictionary entry-encyclopedia paper-conference\" match=\"any\">\n        <text macro=\"container-prefix\" suffix=\" \"/>\n      </if>\n    </choose>\n    <choose>\n      <if type=\"webpage\">\n        <text variable=\"container-title\" text-case=\"title\"/>\n      </if>\n      <else-if type=\"legal_case\" match=\"none\">\n        <group delimiter=\" \">\n          <text variable=\"container-title\" text-case=\"title\" font-style=\"italic\"/>\n          <choose>\n            <if type=\"post-weblog\">\n              <text value=\"(blog)\"/>\n            </if>\n          </choose>\n        </group>\n      </else-if>\n    </choose>\n  </macro>\n  <macro name=\"publisher\">\n    <group delimiter=\": \">\n      <text variable=\"publisher-place\"/>\n      <text variable=\"publisher\"/>\n    </group>\n  </macro>\n  <macro name=\"date\">\n    <choose>\n      <if variable=\"issued\">\n        <group delimiter=\" \">\n          <date variable=\"original-date\" form=\"text\" date-parts=\"year\" prefix=\"(\" suffix=\")\"/>\n          <date variable=\"issued\">\n            <date-part name=\"year\"/>\n          </date>\n        </group>\n      </if>\n      <else-if variable=\"status\">\n        <text variable=\"status\" text-case=\"capitalize-first\"/>\n      </else-if>\n      <else>\n        <text term=\"no date\" form=\"short\"/>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"date-in-text\">\n    <choose>\n      <if variable=\"issued\">\n        <group delimiter=\" \">\n          <date variable=\"original-date\" form=\"text\" date-parts=\"year\" prefix=\"[\" suffix=\"]\"/>\n          <date variable=\"issued\">\n            <date-part name=\"year\"/>\n          </date>\n        </group>\n      </if>\n      <else-if variable=\"status\">\n        <text variable=\"status\"/>\n      </else-if>\n      <else>\n        <text term=\"no date\" form=\"short\"/>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"day-month\">\n    <date variable=\"issued\">\n      <date-part name=\"month\"/>\n      <date-part name=\"day\" prefix=\" \"/>\n    </date>\n  </macro>\n  <macro name=\"collection-title\">\n    <choose>\n      <if match=\"none\" type=\"article-journal\">\n        <choose>\n          <if match=\"none\" is-numeric=\"collection-number\">\n            <group delimiter=\", \">\n              <text variable=\"collection-title\" text-case=\"title\"/>\n              <text variable=\"collection-number\"/>\n            </group>\n          </if>\n          <else>\n            <group delimiter=\" \">\n              <text variable=\"collection-title\" text-case=\"title\"/>\n              <text variable=\"collection-number\"/>\n            </group>\n          </else>\n        </choose>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"collection-title-journal\">\n    <choose>\n      <if type=\"article-journal\">\n        <group delimiter=\" \">\n          <text variable=\"collection-title\"/>\n          <text variable=\"collection-number\"/>\n        </group>\n      </if>\n    </choose>\n  </macro>\n  <macro name=\"event\">\n    <group>\n      <text term=\"presented at\" suffix=\" \"/>\n      <text variable=\"event\"/>\n    </group>\n  </macro>\n  <macro name=\"description\">\n    <choose>\n      <if type=\"interview\">\n        <group delimiter=\". \">\n          <text macro=\"interviewer\"/>\n          <text variable=\"medium\" text-case=\"capitalize-first\"/>\n        </group>\n      </if>\n      <else-if type=\"patent\">\n        <group delimiter=\" \" prefix=\". \">\n          <text variable=\"authority\"/>\n          <text variable=\"number\"/>\n        </group>\n      </else-if>\n      <else>\n        <text variable=\"medium\" text-case=\"capitalize-first\" prefix=\". \"/>\n      </else>\n    </choose>\n    <choose>\n      <if variable=\"title\" match=\"none\"/>\n      <else-if type=\"thesis personal_communication speech\" match=\"any\"/>\n      <else>\n        <group delimiter=\" \" prefix=\". \">\n          <text variable=\"genre\" text-case=\"capitalize-first\"/>\n          <choose>\n            <if type=\"report\">\n              <text variable=\"number\"/>\n            </if>\n          </choose>\n        </group>\n      </else>\n    </choose>\n  </macro>\n  <macro name=\"issue\">\n    <choose>\n      <if type=\"legal_case\">\n        <text variable=\"authority\" prefix=\". \"/>\n      </if>\n      <else-if type=\"speech\">\n        <group prefix=\". \" delimiter=\", \">\n          <group delimiter=\" \">\n            <text variable=\"genre\" text-case=\"capitalize-first\"/>\n            <text macro=\"event\"/>\n          </group>\n          <text variable=\"event-place\"/>\n          <text macro=\"day-month\"/>\n        </group>\n      </else-if>\n      <else-if type=\"article-newspaper article-magazine personal_communication\" match=\"any\">\n        <date variable=\"issued\" form=\"text\" prefix=\", \"/>\n      </else-if>\n      <else-if type=\"patent\">\n        <group delimiter=\", \" prefix=\", \">\n          <group delimiter=\" \">\n            <!--Needs Localization-->\n            <text value=\"filed\"/>\n            <date variable=\"submitted\" form=\"text\"/>\n          </group>\n          <group delimiter=\" \">\n            <choose>\n              <if variable=\"issued submitted\" match=\"all\">\n                <text term=\"and\"/>\n              </if>\n            </choose>\n            <!--Needs Localization-->\n            <text value=\"issued\"/>\n            <date variable=\"issued\" form=\"text\"/>\n          </group>\n        </group>\n      </else-if>\n      <else-if type=\"article-journal\" match=\"any\"/>\n      <else>\n        <group prefix=\". \" delimiter=\", \">\n          <choose>\n            <if type=\"thesis\">\n              <text variable=\"genre\" text-case=\"capitalize-first\"/>\n            </if>\n          </choose>\n          <text macro=\"publisher\"/>\n        </group>\n      </else>\n    </choose>\n  </macro>\n  <citation et-al-min=\"4\" et-al-use-first=\"1\" disambiguate-add-year-suffix=\"true\" disambiguate-add-names=\"true\" disambiguate-add-givenname=\"true\" givenname-disambiguation-rule=\"primary-name\" collapse=\"year\" after-collapse-delimiter=\"; \">\n    <layout prefix=\"(\" suffix=\")\" delimiter=\"; \">\n      <group delimiter=\", \">\n        <choose>\n          <if variable=\"issued accessed\" match=\"any\">\n            <group delimiter=\" \">\n              <text macro=\"contributors-short\"/>\n              <text macro=\"date-in-text\"/>\n            </group>\n          </if>\n          <!---comma before forthcoming and n.d.-->\n          <else>\n            <group delimiter=\", \">\n              <text macro=\"contributors-short\"/>\n              <text macro=\"date-in-text\"/>\n            </group>\n          </else>\n        </choose>\n        <text macro=\"point-locators\"/>\n      </group>\n    </layout>\n  </citation>\n  <bibliography hanging-indent=\"true\" et-al-min=\"11\" et-al-use-first=\"7\" subsequent-author-substitute=\"&#8212;&#8212;&#8212;\" entry-spacing=\"0\">\n    <sort>\n      <key macro=\"contributors\"/>\n      <key variable=\"issued\"/>\n      <key variable=\"title\"/>\n    </sort>\n    <layout suffix=\".\">\n      <group delimiter=\". \">\n        <text macro=\"contributors\"/>\n        <text macro=\"date\"/>\n        <text macro=\"title\"/>\n      </group>\n      <text macro=\"description\"/>\n      <text macro=\"secondary-contributors\" prefix=\". \"/>\n      <text macro=\"container-title\" prefix=\". \"/>\n      <text macro=\"container-contributors\"/>\n      <text macro=\"edition\"/>\n      <text macro=\"locators-chapter\"/>\n      <text macro=\"collection-title-journal\" prefix=\", \" suffix=\", \"/>\n      <text macro=\"locators\"/>\n      <text macro=\"collection-title\" prefix=\". \"/>\n      <text macro=\"issue\"/>\n      <text macro=\"locators-article\"/>\n      <text macro=\"access\" prefix=\". \"/>\n    </layout>\n  </bibliography>\n</style>\n`;\n\nexport default chicagoAuthorDate;\n","import React, { Component } from \"react\";\n\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport { defaultFilterBy } from \"react-bootstrap-typeahead/lib/utils\";\nimport { compareTwoStrings } from \"string-similarity\";\n\nimport { client } from \"../../../feathers\";\nimport {\n  filterCrossRefWorkByType,\n  fixCrossRefWork,\n  queryCrossRefApi\n} from \"./utilities/crossRefApi\";\nimport { makeCitations } from \"./utilities/citations\";\n\nclass MetadataSearch extends Component {\n  state = {\n    highlightOnlyResult: true,\n    isLoading: false,\n    options: []\n  };\n\n  _renderMenuItemChildren = (option, props, index) => {\n    return [\n      option.citation,\n      <div className=\"dropdown-item-bibliography\" key=\"bibliography\">\n        {option.bibliography}\n      </div>\n    ];\n  };\n\n  filterBy = (option, props) => {\n    const { text } = props;\n    return (\n      option.id ||\n      defaultFilterBy(option, {\n        ...props,\n        filterBy: [\"citation\", \"bibliography\"]\n      }) ||\n      compareTwoStrings(text, option.bibliography) > 0.1\n    );\n  };\n\n  // Query FlexSearch index using graphs endpoint with searchQuery param\n  onSearch = async query => {\n    this.setState({ isLoading: true });\n\n    // Fetch works already in Relata\n    const relataResults = await client.service(\"graphs\").find({\n      query: { searchQuery: query }\n    });\n\n    // Fetch works from CrossRef API\n    const crossRefResults = await queryCrossRefApi(query);\n\n    // Process and filter results from CrossRef\n    const crossRefWorks = crossRefResults\n      .map(fixCrossRefWork)\n      .filter(filterCrossRefWorkByType)\n      .map(work => {\n        return { data: work, ...makeCitations({ data: work }) };\n      })\n      .filter((work, index) => {\n        // Compare against results from Relata, remove any apparent duplicates\n        for (let result of relataResults) {\n          let score = compareTwoStrings(work.bibliography, result.bibliography);\n          return score < 0.67;\n        }\n        return true;\n      })\n      .sort((a, b) => {\n        // Improve default sort of CrossRef results through fuzzy matching\n        // against query\n        const aScore = compareTwoStrings(a.bibliography, query);\n        const bScore = compareTwoStrings(b.bibliography, query);\n        return aScore < bScore ? 1 : -1;\n      });\n\n    // Set state upon completion, placing Relata works first\n    this.setState({\n      isLoading: false,\n      options: [...relataResults, ...crossRefWorks]\n    });\n  };\n\n  // When a work is selected from results list, call selectWork to make that\n  // work the currentWork\n  onChange = selectedItems => {\n    const { setTargetWork } = this.props;\n    if (selectedItems.length > 0) {\n      const selectedWork = selectedItems[0];\n      setTargetWork(selectedWork);\n    }\n  };\n\n  render() {\n    const { highlightOnlyResult, isLoading, options } = this.state;\n\n    return (\n      <AsyncTypeahead\n        isLoading={isLoading}\n        delay={670}\n        labelKey=\"citation\"\n        filterBy={this.filterBy}\n        renderMenuItemChildren={this._renderMenuItemChildren}\n        highlightOnlyResult={highlightOnlyResult}\n        options={options}\n        onChange={this.onChange}\n        onSearch={this.onSearch}\n        maxHeight={\"33vh\"}\n        placeholder=\"Type to search for works via CrossRef…\"\n        selectHintOnEnter\n        clearButton\n      />\n    );\n  }\n}\n\nexport default MetadataSearch;\n","import React, { Component } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nimport LinkifyBibliography from \"../../RelationsPane/LinkifyBibliography\";\nimport MetadataSearch from \"./MetadataSearch\";\n\nclass AddSearchPane extends Component {\n  render() {\n    const { setTargetWork, stagedWorkType, targetWork } = this.props;\n\n    const targetBibliography =\n      targetWork === null ? null : (\n        <Card>\n          <Card.Body>\n            <Card.Text>\n              <LinkifyBibliography>\n                {targetWork.bibliography}\n              </LinkifyBibliography>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      );\n\n    return (\n      <>\n        <Form.Label htmlFor={`metadata-search-${stagedWorkType}`}>\n          Bibliographic search terms (title, author, year)\n        </Form.Label>\n        <InputGroup className=\"mb-3\">\n          <MetadataSearch\n            identifier={`metadata-search-${stagedWorkType}`}\n            setTargetWork={setTargetWork}\n          />\n        </InputGroup>\n        {targetBibliography}\n      </>\n    );\n  }\n}\n\nexport default AddSearchPane;\n","import React, { Component } from \"react\";\n\nimport LinkifyBibliography from \"../../RelationsPane/LinkifyBibliography\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\n// import Nav from \"react-bootstrap/Nav\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Row from \"react-bootstrap/Row\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\n// import AddDOIPane from \"./AddDOIPane\";\nimport AddSearchPane from \"./AddSearchPane\";\n\nclass StageWork extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      targetWork: null\n    };\n  }\n\n  setTargetWork = work => {\n    this.setState({ targetWork: work });\n  };\n\n  stageWork = () => {\n    const { setStagedRelation, stagedRelation, stagedWorkType } = this.props;\n    const { targetWork } = this.state;\n\n    setStagedRelation({ ...stagedRelation, [stagedWorkType]: targetWork });\n  };\n\n  // Unstage the currently staged work of workType and populate it into\n  // targetWork\n  unstageWork = () => {\n    const { setStagedRelation, stagedRelation, stagedWorkType } = this.props;\n    this.setTargetWork(stagedRelation[stagedWorkType]);\n    setStagedRelation({ ...stagedRelation, [stagedWorkType]: null });\n  };\n\n  render() {\n    const { stagedRelation, stagedWorkType } = this.props;\n    const { targetWork } = this.state;\n\n    const stagedWork = stagedRelation[stagedWorkType];\n\n    // Produce appropriate heading for workFrom (subject) or workTo (object)\n    const heading =\n      stagedWorkType === \"workFrom\" ? \"Subject Work\" : \"Object Work\";\n\n    const stageWorkCard = stagedWork ? (\n      <OverlayTrigger\n        key={stagedWorkType}\n        overlay={<Tooltip>Click to edit selected work</Tooltip>}\n      >\n        <Card\n          className=\"mt-3 select-work-card-staged\"\n          onClick={this.unstageWork}\n          onKeyPress={event => {\n            if (event.key === \"Enter\") {\n              this.unstageWork();\n            }\n          }}\n          tabIndex={0}\n        >\n          <Card.Header>{heading}</Card.Header>\n          <Card.Body>\n            <Card.Text>\n              <LinkifyBibliography>\n                {stagedWork.bibliography}\n              </LinkifyBibliography>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </OverlayTrigger>\n    ) : (\n      <Card className=\"mt-3\">\n        <Card.Header>{heading}</Card.Header>\n        <Card.Body>\n          <Tab.Container variant=\"success\" defaultActiveKey=\"add-search-pane\">\n            <Row>\n              {/*\n              <Col sm={3}>\n                <Nav variant=\"pills\" className=\"flex-column\">\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"add-search-pane\">\n                      Metadata Search\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link eventKey=\"add-doi-pane\">DOI</Nav.Link>\n                  </Nav.Item>\n                </Nav>\n              </Col>\n              */}\n              <Col sm={12}>\n                <Tab.Content>\n                  {/*\n                  <Tab.Pane eventKey=\"add-doi-pane\">\n                    <AddDOIPane\n                      setTargetWork={this.setTargetWork}\n                      stagedWorkType={stagedWorkType}\n                      targetWork={targetWork}\n                    />\n                  </Tab.Pane>\n                  */}\n                  <Tab.Pane eventKey=\"add-search-pane\">\n                    <AddSearchPane\n                      setTargetWork={this.setTargetWork}\n                      stagedWorkType={stagedWorkType}\n                      targetWork={targetWork}\n                    />\n                  </Tab.Pane>\n                </Tab.Content>\n              </Col>\n            </Row>\n          </Tab.Container>\n        </Card.Body>\n        <Card.Footer>\n          <Button\n            variant=\"primary\"\n            className=\"float-right\"\n            onClick={this.stageWork}\n          >\n            Select Work\n          </Button>\n        </Card.Footer>\n      </Card>\n    );\n\n    return stageWorkCard;\n  }\n}\n\nexport default StageWork;\n","import React, { Component } from \"react\";\nimport indefinite from \"indefinite\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nclass StagingSummaryCard extends Component {\n  // Shortcut method to swap workFrom for workTo and vice versa\n  swapStagedWorks = () => {\n    const { setStagedRelation, stagedRelation } = this.props;\n    const { workFrom, workTo } = stagedRelation;\n    const newWorks = { workFrom: workTo, workTo: workFrom };\n    setStagedRelation({\n      ...stagedRelation,\n      ...newWorks\n    });\n  };\n\n  render() {\n    const {\n      currentUser,\n      relataConfig,\n      stagedAnnotation,\n      stagedRelation\n    } = this.props;\n    const { type, workFrom, workTo } = stagedRelation;\n\n    // Insert citation if work has been staged, or a blank value if not\n    const blankValue = \"____________\";\n    const workFromSummary = workFrom === null ? blankValue : workFrom.citation;\n    const workToSummary = workTo === null ? blankValue : workTo.citation;\n\n    // Produce an appropriate string for relation type, using the preposition\n    // specified in the Relata config\n    const typeValue = type || blankValue;\n    const relationConfig = relataConfig.types[type];\n    const relationPreposition = relationConfig\n      ? relationConfig.preposition\n      : \"in relation to\";\n    const relationSummary = `${indefinite(typeValue)} ${relationPreposition}`;\n\n    // If relation has an annotation, include it as a footer\n    const annotationAuthor = currentUser.displayName ? (\n      <>\n        <b className=\"relation-lead\">{currentUser.displayName}</b>{\" \"}\n      </>\n    ) : null;\n    const annotationFooter = stagedAnnotation ? (\n      <Card.Footer>\n        <Card.Text className=\"text-dark\">\n          {annotationAuthor}\n          {stagedAnnotation}\n        </Card.Text>\n      </Card.Footer>\n    ) : null;\n\n    return (\n      <Card border=\"dark\">\n        <Card.Body>\n          <Button\n            className=\"float-right\"\n            variant=\"primary\"\n            size=\"sm\"\n            onClick={this.swapStagedWorks}\n          >\n            Reverse\n          </Button>\n          {workFromSummary} represents {relationSummary} {workToSummary}.\n        </Card.Body>\n        {annotationFooter}\n      </Card>\n    );\n  }\n}\n\nexport default StagingSummaryCard;\n","import React, { Component } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport SelectRelationType from \"./SelectRelationType\";\nimport StageWork from \"./StageWork/StageWork\";\nimport StagingSummaryCard from \"./StagingSummaryCard\";\n\nimport { client } from \"../../feathers\";\n\nclass EditRelationModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isSubmitting: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isSubmitting: false });\n  }\n\n  // Enable submission only when staged relation type and works have been set\n  isReadyToSubmit = () => {\n    const { stagedRelation } = this.props;\n\n    return (\n      stagedRelation.type !== null &&\n      stagedRelation.workFrom !== null &&\n      stagedRelation.workTo !== null\n    );\n  };\n\n  // Permanently delete existing relation\n  deleteRelation = async () => {\n    const { selectWork, stagedRelation, toggleEditRelationModal } = this.props;\n\n    // If this is being called without an existing relation, for some reason,\n    // just return\n    if (!stagedRelation.id) {\n      return;\n    }\n\n    // Remove relation, close modal, and refresh graph by reselecting\n    // currentWork\n    const relationsService = client.service(\"relations\");\n    try {\n      // eslint-disable-next-line\n      await relationsService.remove(stagedRelation.id);\n      toggleEditRelationModal();\n      selectWork();\n    } catch (error) {\n      return;\n    }\n  };\n\n  // Submit staged works and relation to backend via Feathers client\n  submitRelation = async () => {\n    const {\n      currentUser,\n      currentWork,\n      selectWork,\n      stagedAnnotation,\n      stagedRelation,\n      toggleEditRelationModal\n    } = this.props;\n    const { type, workFrom, workTo } = stagedRelation;\n\n    // Set isSubmitting to disable Submit button (prevents accidental multiple\n    // submissions)\n    this.setState({ isSubmitting: true });\n\n    // Initialize Feathers services\n    const worksService = client.service(\"works\");\n    const relationsService = client.service(\"relations\");\n\n    // Attempt to submit works and get IDs back\n    let workFromResult;\n    let workToResult;\n    try {\n      // If we already know the work is in the backend (it has an ID), skip the\n      // API call and just re-use the ID; otherwise, create a new work and\n      // obtain the result\n      workFromResult = workFrom.id\n        ? workFrom\n        : await worksService.create(workFrom);\n      workToResult = workTo.id ? workTo : await worksService.create(workTo);\n    } catch (error) {\n      console.log(\"There was an error:\", error);\n      this.setState({ isSubmitting: false });\n      return;\n    }\n\n    // Construct new relation object to submit\n    const relationToSubmit = {\n      type: type,\n      workFromId: workFromResult.id,\n      workToId: workToResult.id,\n      annotation: stagedAnnotation,\n      annotationAuthor: null,\n      userId: currentUser.id\n    };\n\n    // Determine whether we've modified an existing relation or not\n    const updateExistingRelation = stagedRelation.id !== null ? true : false;\n\n    try {\n      if (updateExistingRelation) {\n        await relationsService.update(stagedRelation.id, relationToSubmit);\n      } else {\n        await relationsService.create(relationToSubmit);\n      }\n    } catch (error) {\n      console.log(\"There was an error:\", error);\n      this.setState({ isSubmitting: false });\n      return;\n    }\n\n    // Since our attempts were successful, we now refresh the graph view and\n    // close the modal\n    if (\n      currentWork.id === workFromResult.id ||\n      currentWork.id === workToResult.id\n    ) {\n      selectWork();\n    } else {\n      selectWork(workToResult.id);\n    }\n    toggleEditRelationModal();\n    this.setState({ isSubmitting: false });\n  };\n\n  render() {\n    const {\n      currentUser,\n      relataConfig,\n      setStagedAnnotation,\n      setStagedRelation,\n      showEditRelationModal,\n      stagedAnnotation,\n      stagedRelation,\n      toggleEditRelationModal\n    } = this.props;\n    const { isSubmitting } = this.state;\n\n    // Set modal title based on whether we are editing an existing relation or\n    // adding a new one\n    const modalTitle = stagedRelation.id ? \"Edit Relation\" : \"Add Relation\";\n\n    // Add alert when editing an existing relation\n    const editingExistingAlert = stagedRelation.id ? (\n      <Alert variant=\"warning\" className=\"align-middle\">\n        <Button\n          className=\"float-right align-middle ml-1 mb-1\"\n          variant=\"outline-danger\"\n          onClick={this.deleteRelation}\n        >\n          Delete\n        </Button>\n        <b>Please note:</b> You are editing an existing relation. To permanently\n        delete this relation from Relata, click the Delete button at right.\n      </Alert>\n    ) : null;\n\n    // Disable submit button based on whether all required values are set\n    const submitDisabled = !this.isReadyToSubmit();\n\n    return (\n      <Modal\n        show={showEditRelationModal}\n        onHide={toggleEditRelationModal}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {editingExistingAlert}\n          <StagingSummaryCard\n            currentUser={currentUser}\n            relataConfig={relataConfig}\n            setStagedAnnotation={setStagedAnnotation}\n            setStagedRelation={setStagedRelation}\n            stagedAnnotation={stagedAnnotation}\n            stagedRelation={stagedRelation}\n          />\n          <StageWork\n            setStagedRelation={setStagedRelation}\n            stagedRelation={stagedRelation}\n            stagedWorkType=\"workFrom\"\n          />\n          <SelectRelationType\n            relataConfig={relataConfig}\n            setStagedAnnotation={setStagedAnnotation}\n            setStagedRelation={setStagedRelation}\n            stagedAnnotation={stagedAnnotation}\n            stagedRelation={stagedRelation}\n          />\n          <StageWork\n            setStagedRelation={setStagedRelation}\n            stagedRelation={stagedRelation}\n            stagedWorkType=\"workTo\"\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Alert variant=\"light\">\n            All relation data are publicly and freely accessible. By submitting this relation, you agree to waive all copyright to it under the <Alert.Link href=\"https://creativecommons.org/publicdomain/zero/1.0/\">Creative Commons Zero 1.0 Universal Public Domain Dedication</Alert.Link>.\n          </Alert>\n          <Button variant=\"outline-secondary\" onClick={toggleEditRelationModal}>\n            Cancel\n          </Button>\n          <Button\n            disabled={submitDisabled || isSubmitting}\n            style={\n              submitDisabled || isSubmitting ? { cursor: \"not-allowed\" } : {}\n            }\n            variant=\"primary\"\n            onClick={this.submitRelation}\n          >\n            {isSubmitting ? \"Submitting…\" : \"Submit\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default EditRelationModal;\n","import React from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport Row from \"react-bootstrap/Row\";\n\nconst PaginatedResults = props => {\n  const {\n    fetchResults,\n    message,\n    noResultsMessage,\n    transformResult,\n    results\n  } = props;\n  if (!results) {\n    return noResultsMessage;\n  }\n  const { data, limit, skip, total } = results;\n\n  // Handle missing data\n  if (!data) {\n    return null;\n  } else if (data.length < 1) {\n    return noResultsMessage;\n  }\n\n  // Determine whether this is the first or last page of results\n  const isFirstPage = skip === 0;\n  const isLastPage = skip + limit >= total;\n\n  // Get skip index for previous, last, and next pages\n  const prevPageIndex = skip - limit < 1 ? 0 : skip - limit;\n  const lastPageIndex = Math.floor(total / limit) * limit;\n  const nextPageIndex = skip + limit > total ? lastPageIndex : skip + limit;\n\n  // Get item numbers for display\n  const itemRangeStart = skip + 1;\n  const itemRangeEnd = itemRangeStart + data.length - 1;\n\n  // Map transform callback over results data, then wrap in ResultRows\n  const resultRows = data.map(transformResult);\n\n  return (\n    <>\n      <p>{message}</p>\n      <Card className=\"mb-3\">\n        <ListGroup\n          className=\"paginated-results-list\"\n          variant=\"flush\"\n          style={{ overflow: \"scroll\", maxHeight: \"24rem\" }}\n        >\n          {resultRows}\n        </ListGroup>\n      </Card>\n      <Col>\n        <Row className=\"justify-content-center\">\n          <Pagination>\n            <Pagination.First\n              disabled={isFirstPage}\n              onClick={() => fetchResults(0)}\n              style={isFirstPage ? { cursor: \"not-allowed\" } : null}\n            />\n            <Pagination.Prev\n              disabled={isFirstPage}\n              onClick={() => fetchResults(prevPageIndex)}\n              style={isFirstPage ? { cursor: \"not-allowed\" } : null}\n            />\n            <div className=\"text-center pt-2 pb-2 pl-3 pr-3\">\n              Showing {itemRangeStart}-{itemRangeEnd} of {total}\n            </div>\n            <Pagination.Next\n              disabled={isLastPage}\n              onClick={() => fetchResults(nextPageIndex)}\n              style={isLastPage ? { cursor: \"not-allowed\" } : null}\n            />\n            <Pagination.Last\n              disabled={isLastPage}\n              onClick={() => fetchResults(lastPageIndex)}\n              style={isLastPage ? { cursor: \"not-allowed\" } : null}\n            />\n          </Pagination>\n        </Row>\n      </Col>\n    </>\n  );\n};\n\nexport default PaginatedResults;\n","import React, { Component } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport format from \"date-fns/format\";\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\nimport parseISO from \"date-fns/parseISO\";\n\nimport EditRelationModal from \"../EditRelationModal/EditRelationModal\";\nimport PaginatedResults from \"./PaginatedResults\";\n\nimport { makeCitations } from \"../EditRelationModal/StageWork/utilities/citations\";\n\nclass ContributionsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  toggleEditExistingRelationModal = relation => {\n    const {\n      setStagedAnnotation,\n      setStagedRelation,\n      stagedRelation,\n      toggleEditRelationModal,\n      toggleContributionsModal\n    } = this.props;\n    const { workFrom, workTo } = relation;\n\n    // Add citations to existing works\n    const workFromWithCitations = { ...workFrom, ...makeCitations(workFrom) };\n    const workToWithCitations = { ...workTo, ...makeCitations(workTo) };\n\n    // We have to handle annotation separately to provide performant live\n    // updating in SelectRelationType\n    setStagedAnnotation(relation.annotation);\n    setStagedRelation({\n      ...stagedRelation,\n      id: relation.id,\n      type: relation.type,\n      workFrom: workFromWithCitations,\n      workTo: workToWithCitations\n    });\n\n    toggleContributionsModal();\n    toggleEditRelationModal();\n  };\n\n  makeContributionRow = relation => {\n    const { getRelationColor, selectWork } = this.props;\n\n    const workFrom = {\n      ...relation.workFrom,\n      ...makeCitations(relation.workFrom)\n    };\n    const workTo = {\n      ...relation.workTo,\n      ...makeCitations(relation.workTo)\n    };\n    const color = getRelationColor(relation.type);\n    const updatedDate = parseISO(relation.updatedAt);\n    const updatedVerb =\n      relation.updatedAt === relation.createdAt ? \"Created \" : \"Updated \";\n    const updatedSummary =\n      updatedVerb + formatDistanceToNow(updatedDate, { addSuffix: true });\n    const updatedTitle = format(updatedDate, \"PPPPp\");\n    return (\n      <ListGroup.Item\n        as=\"a\"\n        key={relation.id}\n        className=\"paginated-results-item\"\n        style={{\n          borderLeft: `0.25rem solid ${color}`\n        }}\n        onClick={() => {\n          selectWork(relation.workTo.id);\n          this.props.toggleContributionsModal();\n        }}\n        action\n      >\n        <span className=\"align-middle\">\n          <span className=\"mr-2\">\n            <span className=\"relation-lead\">{relation.type}</span>{\" \"}\n            {workFrom.citation} → {workTo.citation}\n          </span>{\" \"}\n          <span className=\"text-muted\" title={updatedTitle}>\n            {updatedSummary}\n          </span>\n        </span>\n        <Button\n          className=\"float-right\"\n          variant=\"success\"\n          size=\"sm\"\n          onClick={event => {\n            event.stopPropagation();\n            this.toggleEditExistingRelationModal(relation);\n          }}\n        >\n          Edit\n        </Button>\n      </ListGroup.Item>\n    );\n  };\n\n  render() {\n    const {\n      currentUser,\n      getUserRelations,\n      relataConfig,\n      selectWork,\n      setStagedAnnotation,\n      setStagedRelation,\n      showContributionsModal,\n      showEditRelationModal,\n      stagedAnnotation,\n      stagedRelation,\n      toggleEditRelationModal,\n      toggleContributionsModal,\n      userRelations\n    } = this.props;\n\n    return (\n      <Modal\n        show={showContributionsModal}\n        onHide={toggleContributionsModal}\n        size=\"lg\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Contributions</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <PaginatedResults\n            message=\"You have contributed the following relations to Relata. Click on a relation to view it:\"\n            noResultsMessage=\"You have not yet contributed any relations to Relata.\"\n            fetchResults={getUserRelations}\n            transformResult={this.makeContributionRow}\n            results={userRelations}\n          />\n          <EditRelationModal\n            currentUser={currentUser}\n            relataConfig={relataConfig}\n            selectWork={selectWork}\n            setStagedAnnotation={setStagedAnnotation}\n            setStagedRelation={setStagedRelation}\n            showEditRelationModal={showEditRelationModal}\n            stagedAnnotation={stagedAnnotation}\n            stagedRelation={stagedRelation}\n            toggleEditRelationModal={toggleEditRelationModal}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"outline-secondary\"\n            onClick={toggleContributionsModal}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ContributionsModal;\n","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst GlossaryModal = props => {\n  const {\n    getRelationColor,\n    relataConfig,\n    showGlossaryModal,\n    toggleGlossaryModal\n  } = props;\n\n  // Populate definitions from relation types in config\n  let relationTypes;\n  if (relataConfig.types) {\n    relationTypes = Object.keys(relataConfig.types)\n      .filter(relationType => relationType !== \"*\")\n      .sort();\n  } else {\n    relationTypes = [];\n  }\n  const definitions = relationTypes.map(relationType => {\n    const definition = relataConfig.types[relationType].definition;\n    const color = getRelationColor(relationType);\n    return (\n      <ListGroup.Item key={relationType} style={{ borderLeft: `0.25rem solid ${color}` }}>\n        <b className=\"relation-lead\">{relationType}</b> {definition}\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <Modal show={showGlossaryModal} onHide={toggleGlossaryModal} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>Glossary</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Card>\n          <ListGroup variant=\"flush\">{definitions}</ListGroup>\n        </Card>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={toggleGlossaryModal}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default GlossaryModal;\n","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nconst LoginModal = props => {\n  const { relataConfig, showLoginModal, toggleLoginModal } = props;\n\n  const loginButtons = relataConfig.oauthProviders\n    ? relataConfig.oauthProviders.map(provider => {\n        const { id, name, iconClass } = provider;\n        // If iconClass is specified in config, use that; if not, default to\n        // standard FontAwesome class name pattern. This allows us to include\n        // custom icons from Academicons for, e.g., Zotero\n        const icon = <i className={iconClass || `fab fa-${id}`}></i>;\n        return (\n          <Button\n            key={id}\n            variant=\"outline-primary\"\n            href={`/oauth/${id}`}\n            block\n          >\n            {icon} Connect via {name}\n          </Button>\n        );\n      })\n    : null;\n\n  return (\n    <Modal show={showLoginModal} onHide={toggleLoginModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>Sign In</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>Use one of the following services to sign into Relata:</p>\n        {loginButtons}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={toggleLoginModal}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n","import React, { Component } from \"react\";\n\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport { defaultFilterBy } from \"react-bootstrap-typeahead/lib/utils/defaultFilterBy\";\nimport { compareTwoStrings } from \"string-similarity\";\n\nimport { client } from \"../../feathers\";\n\nclass NavSearch extends Component {\n  state = {\n    highlightOnlyResult: true,\n    isLoading: false,\n    options: []\n  };\n\n  _renderMenuItemChildren = (option, props, index) => {\n    return [\n      option.citation,\n      <div className=\"dropdown-item-bibliography\" key=\"bibliography\">\n        {option.bibliography}\n      </div>\n    ];\n  };\n\n  filterBy = (option, props) => {\n    const { text } = props;\n    return Boolean(\n      option.id ||\n        defaultFilterBy(option, {\n          ...props,\n          filterBy: [\"citation\", \"bibliography\"]\n        }) ||\n        compareTwoStrings(text, option.bibliography) > 0.1\n    );\n  };\n\n  // Query FlexSearch index using graphs endpoint with searchQuery param\n  onSearch = query => {\n    this.setState({ isLoading: true });\n    client\n      .service(\"graphs\")\n      .find({ query: { searchQuery: query } })\n      .then(results => {\n        this.setState({\n          isLoading: false,\n          options: results\n        });\n      });\n  };\n\n  // When a work is selected from results list, call selectWork to make that\n  // work the currentWork\n  onChange = selectedItems => {\n    const { selectWork } = this.props;\n    if (selectedItems.length > 0) {\n      const selectedWork = selectedItems[0];\n      selectWork(selectedWork.id);\n\n      // Clear input\n      this.typeahead.clear();\n    }\n  };\n\n  render() {\n    const { highlightOnlyResult, isLoading, options } = this.state;\n\n    return (\n      <AsyncTypeahead\n        id=\"nav-search\"\n        ref={typeahead => (this.typeahead = typeahead)}\n        className=\"col-md-4 col-sm-12 p-0\"\n        isLoading={isLoading}\n        delay={670}\n        labelKey=\"citation\"\n        filterBy={this.filterBy}\n        renderMenuItemChildren={this._renderMenuItemChildren}\n        highlightOnlyResult={highlightOnlyResult}\n        options={options}\n        onChange={this.onChange}\n        onSearch={this.onSearch}\n        maxHeight=\"67vh\"\n        placeholder=\"Type to search for works in Relata…\"\n        selectHintOnEnter\n        clearButton\n      />\n    );\n  }\n}\n\nexport default NavSearch;\n","import React, { Component } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport PaginatedResults from \"./PaginatedResults\";\n\nimport { client } from \"../../feathers\";\n\nclass UsersModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  deleteUser = userId => {\n    const { getUsers } = this.props;\n\n    const usersService = client.service(\"users\");\n    usersService.remove(userId).then(result => getUsers());\n  };\n\n  makeUserRow = user => {\n    const { currentUser } = this.props;\n    const adminSummary = user.isAdmin === 1 ? \"administrator\" : null;\n    const userSummary = [user.displayName, user.email, adminSummary]\n      .filter(value => value)\n      .join(\" | \");\n    const currentUserNote =\n      user.id === currentUser.id ? (\n        <>\n          {\" \"}\n          <i>(current user)</i>\n        </>\n      ) : null;\n    const deleteButton =\n      user.id === currentUser.id ? null : (\n        <Button\n          className=\"float-right\"\n          variant=\"outline-danger\"\n          size=\"sm\"\n          onClick={() => this.deleteUser(user.id)}\n        >\n          Delete\n        </Button>\n      );\n    return (\n      <ListGroup.Item key={user.id}>\n        <span className=\"align-middle\">\n          <span className=\"relation-lead\">User {user.id}</span> {userSummary}\n          {currentUserNote}\n          {deleteButton}\n        </span>\n      </ListGroup.Item>\n    );\n  };\n\n  render() {\n    const { getUsers, showUsersModal, toggleUsersModal, users } = this.props;\n\n    return (\n      <Modal show={showUsersModal} onHide={toggleUsersModal} size=\"lg\">\n        <Modal.Header closeButton>\n          <Modal.Title>Users</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Alert variant=\"warning\">\n            <b>Please note:</b> Deleting a user will also permanently delete all\n            relations created by that user. Be careful when deleting users!\n          </Alert>\n          <PaginatedResults\n            message=\"As an administrator, you can use this interface to review and permanently delete Relata users. The database contains the following users:\"\n            noResultsMessage=\"Could not find any users in the Relata database.\"\n            fetchResults={getUsers}\n            transformResult={this.makeUserRow}\n            results={users}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={toggleUsersModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default UsersModal;\n","import React, { Component } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nimport AccountModal from \"./AccountModal\";\nimport ContributionsModal from \"./ContributionsModal\";\nimport GlossaryModal from \"./GlossaryModal\";\nimport LoginModal from \"./LoginModal\";\nimport NavSearch from \"./NavSearch\";\nimport UsersModal from \"./UsersModal\";\n\nimport { client } from \"../../feathers\";\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showContributionsModal: false,\n      showGlossaryModal: false,\n      showAccountModal: false,\n      showLoginModal: false,\n      showUsersModal: false,\n      stagedUserId: null,\n      stagedUserPatch: {},\n      userRelations: {},\n      users: {}\n    };\n  }\n\n  getUserRelations = index => {\n    const { currentUser } = this.props;\n\n    const relationsService = client.service(\"relations\");\n    relationsService\n      .find({\n        query: {\n          $limit: 20,\n          $skip: index,\n          $sort: {\n            updatedAt: -1\n          },\n          userId: currentUser.id,\n          expand: true\n        }\n      })\n      .then(results => {\n        this.setState({ userRelations: results });\n      });\n  };\n\n  getUsers = index => {\n    const { currentUser } = this.props;\n\n    // Check that currentUser is an admin\n    if (!(currentUser.isAdmin === 1)) {\n      return;\n    }\n\n    // Get users\n    const usersService = client.service(\"users\");\n    usersService\n      .find({\n        query: {\n          $limit: 20,\n          $skip: index,\n          $sort: {\n            id: 1\n          }\n        }\n      })\n      .then(results => {\n        this.setState({ users: results });\n      });\n  };\n\n  setStagedUserId = userId => {\n    console.log(\"Setting staged userId\", userId);\n    this.setState({ stagedUserId: userId });\n    console.log(\"StagedUserId\", this.state.stagedUserId);\n  };\n\n  setStagedUserPatch = patch => {\n    this.setState({ stagedUserPatch: patch });\n  };\n\n  toggleAccountModal = () => {\n    const { currentUser } = this.props;\n    const { showAccountModal } = this.state;\n\n    if (!showAccountModal) {\n      this.setStagedUserPatch({\n        displayName: currentUser.displayName,\n        email: currentUser.email\n      });\n    }\n    this.setState({\n      showAccountModal: !showAccountModal\n    });\n  };\n\n  toggleContributionsModal = () => {\n    const { showContributionsModal } = this.state;\n    if (!showContributionsModal) {\n      this.getUserRelations(0);\n    }\n    this.setState({\n      showContributionsModal: !showContributionsModal\n    });\n  };\n\n  toggleGlossaryModal = () => {\n    const { showGlossaryModal } = this.state;\n    this.setState({\n      showGlossaryModal: !showGlossaryModal\n    });\n  };\n\n  toggleLoginModal = () => {\n    const { showLoginModal } = this.state;\n    this.setState({\n      showLoginModal: !showLoginModal\n    });\n  };\n\n  toggleUsersModal = () => {\n    const { showUsersModal } = this.state;\n    if (!showUsersModal) {\n      this.getUsers(0);\n    }\n    this.setState({\n      showUsersModal: !showUsersModal\n    });\n  };\n\n  render() {\n    const {\n      currentUser,\n      getRelationColor,\n      login,\n      logout,\n      relataConfig,\n      selectWork,\n      setStagedAnnotation,\n      setStagedRelation,\n      showEditRelationModal,\n      stagedAnnotation,\n      stagedRelation,\n      toggleEditRelationModal\n    } = this.props;\n    const {\n      showContributionsModal,\n      showGlossaryModal,\n      showAccountModal,\n      showLoginModal,\n      showUsersModal,\n      stagedUserPatch,\n      userRelations,\n      users\n    } = this.state;\n\n    const aboutUrl = relataConfig\n      ? relataConfig.aboutUrl\n      : \"https://culanth.org/engagements/relata\";\n\n    // Include appropriate navbar links based on whether the user is logged in\n    // or not\n    const userLinks = currentUser ? (\n      <>\n        <Nav.Link\n          onClick={() => {\n            this.setStagedUserId(currentUser.id);\n            this.setStagedUserPatch({\n              displayName: currentUser.displayName,\n              email: currentUser.email\n            });\n            this.toggleAccountModal();\n          }}\n        >\n          Account\n        </Nav.Link>\n        <Nav.Link onClick={this.toggleContributionsModal}>\n          Contributions\n        </Nav.Link>\n        {currentUser.isAdmin === 1 ? (\n          <Nav.Link onClick={this.toggleUsersModal}>Users</Nav.Link>\n        ) : null}\n        <Nav.Link onClick={logout}>Sign Out</Nav.Link>\n      </>\n    ) : (\n      <>\n        <Nav.Link onClick={this.toggleLoginModal}>Sign In</Nav.Link>\n      </>\n    );\n\n    const glossaryModal = (\n      <GlossaryModal\n        getRelationColor={getRelationColor}\n        relataConfig={relataConfig}\n        showGlossaryModal={showGlossaryModal}\n        toggleGlossaryModal={this.toggleGlossaryModal}\n      />\n    );\n\n    // Include AccountModal only if user is logged in\n    const accountModal = currentUser ? (\n      <AccountModal\n        currentUser={currentUser}\n        login={login}\n        relataConfig={relataConfig}\n        selectWork={selectWork}\n        setStagedUserPatch={this.setStagedUserPatch}\n        showAccountModal={showAccountModal}\n        stagedUserPatch={stagedUserPatch}\n        targetUser={currentUser}\n        toggleAccountModal={this.toggleAccountModal}\n      />\n    ) : null;\n\n    // Include ContributionsModal only if user is logged in\n    const contributionsModal = currentUser ? (\n      <ContributionsModal\n        currentUser={currentUser}\n        getRelationColor={getRelationColor}\n        getUserRelations={this.getUserRelations}\n        relataConfig={relataConfig}\n        selectWork={selectWork}\n        setStagedAnnotation={setStagedAnnotation}\n        setStagedRelation={setStagedRelation}\n        showContributionsModal={showContributionsModal}\n        showEditRelationModal={showEditRelationModal}\n        stagedAnnotation={stagedAnnotation}\n        stagedRelation={stagedRelation}\n        toggleContributionsModal={this.toggleContributionsModal}\n        toggleEditRelationModal={toggleEditRelationModal}\n        userRelations={userRelations}\n      />\n    ) : null;\n\n    // Include LoginModal only if user is not logged in\n    const loginModal = currentUser ? null : (\n      <LoginModal\n        relataConfig={relataConfig}\n        showLoginModal={showLoginModal}\n        toggleLoginModal={this.toggleLoginModal}\n      />\n    );\n\n    // Include UsersModal only if user is an administrator\n    const usersModal =\n      currentUser && currentUser.isAdmin === 1 ? (\n        <UsersModal\n          currentUser={currentUser}\n          getUsers={this.getUsers}\n          showUsersModal={showUsersModal}\n          toggleUsersModal={this.toggleUsersModal}\n          users={users}\n        />\n      ) : null;\n\n    return (\n      <Navbar id=\"navbar\" bg=\"light\" variant=\"light\" expand=\"lg\" fluid=\"true\">\n        <Button\n          className=\"sr-only sr-only-focusable p-2 pl-3 pr-3\"\n          variant=\"light\"\n          href=\"#content\"\n          style={{ position: \"absolute\" }}\n        >\n          Skip to main content\n        </Button>\n        <Navbar.Brand href=\"/\">Relata</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav>\n            <Nav.Link href={aboutUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              About\n            </Nav.Link>\n            <Nav.Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              onClick={this.toggleGlossaryModal}\n            >\n              Glossary\n            </Nav.Link>\n            {userLinks}\n          </Nav>\n        </Navbar.Collapse>\n        <NavSearch selectWork={selectWork} />\n        {glossaryModal}\n        {accountModal}\n        {contributionsModal}\n        {loginModal}\n        {contributionsModal}\n        {usersModal}\n      </Navbar>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\n\nimport LinkifyBibliography from \"./LinkifyBibliography\";\n\nconst CurrentWorkCard = props => {\n  const { currentWork } = props;\n  return (\n    <Card border=\"dark\" className=\"mb-3\">\n      <Card.Body>\n        <Card.Text>\n          <LinkifyBibliography>{currentWork.bibliography}</LinkifyBibliography>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CurrentWorkCard;\n","import React, { Component } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\nimport LinkifyBibliography from \"./LinkifyBibliography\";\n\nclass RelationCard extends Component {\n  toggleEditExistingRelationModal = relation => {\n    const {\n      currentWork,\n      setStagedAnnotation,\n      setStagedRelation,\n      stagedRelation,\n      toggleEditRelationModal\n    } = this.props;\n\n    // We have to handle annotation separately to provide performant live\n    // updating in SelectRelationType\n    setStagedAnnotation(relation.annotation);\n    setStagedRelation({\n      ...stagedRelation,\n      id: relation.id,\n      type: relation.type,\n      workFrom: relation.workFrom,\n      workTo: currentWork\n    });\n\n    toggleEditRelationModal();\n  };\n\n  render() {\n    const { currentUser, relataConfig, relation, selectWork } = this.props;\n\n    // Construct relation lead with tooltip\n    let relationLead;\n    if (\n      relataConfig &&\n      relataConfig.types &&\n      relataConfig.types[relation.type] &&\n      relataConfig.types[relation.type].definition\n    ) {\n      const definitionTooltip = (\n        <Tooltip>{relataConfig.types[relation.type].definition}</Tooltip>\n      );\n      relationLead = (\n        <OverlayTrigger placement=\"top\" overlay={definitionTooltip}>\n          <b className=\"relation-lead\">{relation.type}</b>\n        </OverlayTrigger>\n      );\n    } else {\n      relationLead = <b className=\"relation-lead\">{relation.type}</b>;\n    }\n\n    // Construct annotation footer if this relation has an annotation\n    const annotationAuthor =\n      relation.annotationAuthor ||\n      relation.user.displayName ||\n      \"Anonymous User\";\n    const annotationFooter = relation.annotation ? (\n      <Card.Footer>\n        <Card.Text className=\"text-dark\">\n          <b className=\"relation-lead\">{annotationAuthor}</b>{\" \"}\n          {relation.annotation}\n        </Card.Text>\n      </Card.Footer>\n    ) : null;\n\n    // If this relation is owned by currentUser, add an Edit button\n    const editButton =\n      currentUser && relation.user.id === currentUser.id ? (\n        <Button\n          className=\"float-right ml-2 mb-2\"\n          variant=\"success\"\n          onClick={event => {\n            event.stopPropagation();\n            this.toggleEditExistingRelationModal(relation);\n          }}\n        >\n          Edit\n        </Button>\n      ) : null;\n\n    return (\n      <Card\n        className=\"relation-card mt-3\"\n        onClick={() => selectWork(relation.workFrom.id)}\n        onKeyPress={event => {\n          if (event.key === \"Enter\") {\n            selectWork(relation.workFrom.id);\n          }\n        }}\n        style={{ borderLeftColor: relation.color }}\n        tabIndex={0}\n      >\n        <Card.Body>\n          <Card.Text>\n            {editButton}\n            {relationLead}{\" \"}\n            <LinkifyBibliography>\n              {relation.workFrom.bibliography}\n            </LinkifyBibliography>\n          </Card.Text>\n        </Card.Body>\n        {annotationFooter}\n      </Card>\n    );\n  }\n}\n\nexport default RelationCard;\n","import React, { Component } from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport EditRelationModal from \"../EditRelationModal/EditRelationModal\";\nimport CurrentWorkCard from \"./CurrentWorkCard\";\nimport RelationCard from \"./RelationCard\";\n\nclass RelationsPane extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  // Shortcut method to toggleEditRelationModal with appropriate presets for\n  // adding a relation to the currentWork\n  toggleAddRelationModal = () => {\n    const {\n      currentWork,\n      showEditRelationModal,\n      setStagedRelation,\n      stagedRelation,\n      toggleEditRelationModal\n    } = this.props;\n    if (!showEditRelationModal) {\n      setStagedRelation({ ...stagedRelation, workTo: currentWork });\n      toggleEditRelationModal();\n    }\n  };\n\n  render() {\n    const {\n      currentUser,\n      currentWork,\n      relataConfig,\n      selectWork,\n      setStagedAnnotation,\n      setStagedRelation,\n      stagedAnnotation,\n      stagedRelation,\n      showEditRelationModal,\n      toggleEditRelationModal\n    } = this.props;\n\n    const RelationCards = currentWork.relationsTo ? currentWork.relationsTo.map((relation, index) => {\n      return (\n        <RelationCard\n          key={relation.id}\n          currentUser={currentUser}\n          currentWork={currentWork}\n          relataConfig={relataConfig}\n          relation={relation}\n          selectWork={selectWork}\n          setStagedAnnotation={setStagedAnnotation}\n          setStagedRelation={setStagedRelation}\n          showEditRelationModal={showEditRelationModal}\n          stagedAnnotation={stagedAnnotation}\n          stagedRelation={stagedRelation}\n          toggleEditRelationModal={toggleEditRelationModal}\n        />\n      );\n    }) : null;\n\n    const addRelationButton = currentUser ? (\n      <Button variant=\"primary\" onClick={this.toggleAddRelationModal}>\n        Add Relation\n      </Button>\n    ) : null;\n\n    return (\n      <div>\n        <CurrentWorkCard currentWork={currentWork} />\n        <div className=\"mt-3 text-right\">\n          {addRelationButton}\n          <EditRelationModal\n            currentUser={currentUser}\n            currentWork={currentWork}\n            relataConfig={relataConfig}\n            selectWork={selectWork}\n            setStagedAnnotation={setStagedAnnotation}\n            setStagedRelation={setStagedRelation}\n            showEditRelationModal={showEditRelationModal}\n            stagedAnnotation={stagedAnnotation}\n            stagedRelation={stagedRelation}\n            toggleEditRelationModal={toggleEditRelationModal}\n          />\n        </div>\n        {RelationCards}\n      </div>\n    );\n  }\n}\n\nexport default RelationsPane;\n","import React from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\n\nconst ErrorPane = props => {\n  if (props.code === 404) {\n    return (\n      <Alert>\n        <Alert.Heading>Not found</Alert.Heading>\n      </Alert>\n    );\n  } else {\n    return (\n      <Alert>\n        <Alert.Heading>Error</Alert.Heading>\n      </Alert>\n    );\n  }\n};\n\nexport default ErrorPane;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport GraphPane from \"./GraphPane/GraphPane\";\nimport Navigation from \"./Navigation/Navigation\";\nimport RelationsPane from \"./RelationsPane/RelationsPane\";\nimport ErrorPane from \"./ErrorPane/ErrorPane\";\n\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"academicons/css/academicons.min.css\";\nimport \"./App.scss\";\n\nimport { client } from \"../feathers\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentWork: { id: null, relationsFrom: [], relationsTo: [] },\n      currentWorkNotFound: false,\n      currentUser: null,\n      relataConfig: {},\n      stagedAnnotation: null,\n      stagedRelation: {\n        id: null,\n        type: null,\n        workFrom: null,\n        workTo: null\n      },\n      showEditRelationModal: false\n    };\n\n    this.props.history.listen((location, action) => {\n      const selector = this.props.match.params.selector;\n      if (selector !== null && selector !== this.state.currentWork.id) {\n        this.selectWork(selector, false);\n      }\n    });\n  }\n\n  // Fetch initial work, Relata config, and auth information. It's important\n  // to maintain this sequence; otherwise, the multiple initial API calls\n  // cause cryptic GraphViz errors for some reason. This seems to be the\n  // best workaround\n  setInitialState = selector => {\n    client\n      .service(\"graphs\")\n      .get(selector.toString().replace(\"/\", \",\"))\n      .then(graph => {\n        if (graph == null) {\n          this.setState({ currentWorkNotFound: true });\n        } else {\n          this.setState({\n            currentWork: graph,\n            currentWorkNotFound: false,\n            stagedRelation: {\n              id: null,\n              type: null,\n              workFrom: null,\n              workTo: null,\n              annotation: null\n            },\n            showEditRelationModal: false\n          });\n        }\n      });\n  };\n\n  componentDidMount() {\n    // Get config, set relataConfig\n    this.getRelataConfig(() => {\n      let { selector } = this.props.match.params;\n      if (selector === undefined) {\n        // Get candidate landing works from config (or default to ID = 1)\n        let candidates = this.state.relataConfig.landingWorks || [\"1\"];\n        // Pick selector at random among candidates\n        selector = candidates[Math.floor(Math.random() * candidates.length)];\n      }\n      // Select a work and get Relata config to populate initial state\n      this.setInitialState(selector);\n    });\n\n    // Login, set currentUser\n    this.login();\n  }\n\n  // Log in via OAuth\n  login = (refresh = false) => {\n    console.log(\"Logging in or re-authenticating…\");\n    // Attempt to re-authenticate\n    client\n      .reAuthenticate(refresh)\n      .then(({ user }) => {\n        console.log(\"Authenticated\");\n        this.setState({ currentUser: user });\n      })\n      .catch(error => {\n        console.log(\"Failed to authenticate:\", error);\n      });\n  };\n\n  // Log out from OAuth session\n  logout = async () => {\n    console.log(\"Logging out…\");\n    await client.logout();\n    this.setState({ currentUser: null });\n    console.log(\"Logged out!\");\n  };\n\n  // Fetch Relata configuration object from configuration JSON file\n  getRelataConfig = callback => {\n    client\n      .service(\"config\")\n      .find()\n      .then(relataConfig => {\n        this.setState({ relataConfig: relataConfig }, callback);\n      });\n  };\n\n  // Fetch a work graph from the Feathers backend and refresh the frontend (if\n  // called without arguments, will simply refresh the frontend for currentWork\n  selectWork = (selector = this.state.currentWork.id, changeHistory = true) => {\n    if (selector == null) {\n      return;\n    }\n    client\n      .service(\"graphs\")\n      .get(selector.toString().replace(\"/\", \",\"))\n      .then(graph => {\n        if (graph == null && selector == this.state.currentWork.id) {\n          this.setState({ currentWorkNotFound: true });\n        } else {\n          this.setState({\n            currentWork: graph,\n            currentWorkNotFound: false\n          }, () => {\n            let newSelector;\n            if (graph.doi) {\n              newSelector = \"doi:\" + graph.doi;\n            } else {\n              newSelector = graph.id;\n            }\n            this.props.match.params.selector = newSelector;\n            if (changeHistory) {\n              this.props.history.push(\"/work/\" + newSelector + \"/\");\n            }\n          });\n        }\n      });\n  };\n\n  // Look up the configured color for a given relation type\n  getRelationColor = relationType => {\n    const { relataConfig } = this.state;\n    try {\n      const typeConfig =\n        relataConfig.types[relationType] || relataConfig.types[\"*\"];\n      return typeConfig.color;\n    } catch (error) {\n      // Return default color if there was an error looking up the color, e.g.,\n      // if relataConfig is not yet loaded from the backend\n      return \"#808080\";\n    }\n  };\n\n  // Modify stagedAnnotation\n  setStagedAnnotation = annotation => {\n    this.setState({ stagedAnnotation: annotation });\n  };\n\n  // Modify stagedRelation\n  setStagedRelation = relation => {\n    this.setState({ stagedRelation: relation });\n  };\n\n  // Open or close EditRelationModal\n  toggleEditRelationModal = () => {\n    const { showEditRelationModal } = this.state;\n    if (showEditRelationModal) {\n      this.setState({\n        stagedAnnotation: null,\n        stagedRelation: {\n          id: null,\n          type: null,\n          workFrom: null,\n          workTo: null,\n          annotation: null\n        }\n      });\n    }\n    this.setState({\n      showEditRelationModal: !showEditRelationModal\n    });\n  };\n\n  render() {\n    const {\n      currentUser,\n      currentWork,\n      currentWorkNotFound,\n      relataConfig,\n      showEditRelationModal,\n      stagedAnnotation,\n      stagedRelation\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Navigation\n          currentUser={currentUser}\n          getRelationColor={this.getRelationColor}\n          login={this.login}\n          logout={this.logout}\n          relataConfig={relataConfig}\n          selectWork={this.selectWork}\n          setStagedAnnotation={this.setStagedAnnotation}\n          setStagedRelation={this.setStagedRelation}\n          showEditRelationModal={showEditRelationModal}\n          stagedAnnotation={stagedAnnotation}\n          stagedRelation={stagedRelation}\n          toggleEditRelationModal={this.toggleEditRelationModal}\n        />\n        {/* eslint-disable-next-line */}\n        <a id=\"content\" style={{ position: \"absolute\", top: 0 }}></a>\n        <Container fluid className=\"mt-3\">\n          <Row>\n            <Col sm={12} md={4} className=\"mb-3\">\n              {currentWorkNotFound ? (\n                <ErrorPane code={404} />\n              ) : (\n                <RelationsPane\n                  currentUser={currentUser}\n                  currentWork={currentWork}\n                  relataConfig={relataConfig}\n                  selectWork={this.selectWork}\n                  setStagedAnnotation={this.setStagedAnnotation}\n                  setStagedRelation={this.setStagedRelation}\n                  showEditRelationModal={showEditRelationModal}\n                  stagedAnnotation={stagedAnnotation}\n                  stagedRelation={stagedRelation}\n                  toggleEditRelationModal={this.toggleEditRelationModal}\n                />\n              )}\n            </Col>\n            <Col sm={12} md={8}>\n              <GraphPane\n                currentWork={currentWork}\n                selectWork={this.selectWork}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/work/:selector+/\" component={App} />\n    </Switch>\n  </Router>\n, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}